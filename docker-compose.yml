version: '3.3'

services:
  nginx:
    container_name: ${BASE_NAME}_${DOCKER_ENV}_nginx
    image: nginx:1.19.9
    environment:
      DOCKER_ENV: ${DOCKER_ENV}
    volumes:
     - ./nginx-service/templates:/etc/nginx/templates
    networks:
      - frontend
      - backend
    ports:
      - "127.0.0.1:${NGINX_PORT}:8080"
    command: ['nginx', '-g', 'daemon off;']

  api:
    container_name: ${BASE_NAME}_${DOCKER_ENV}_api
    environment:
      DOCKER_ENV: ${DOCKER_ENV}
      SERVICE_MODE: ${SERVICE_MODE}
    logging:
      options:
        max-size: "1m"
        max-file: "2"
    working_dir: /app
    networks:
      - frontend
      - backend
    depends_on:
      - db
      - nginx
      - redis

  auth:
    container_name: ${BASE_NAME}_${DOCKER_ENV}_auth
    environment:
      DOCKER_ENV: ${DOCKER_ENV}
      SERVICE_MODE: ${SERVICE_MODE}
    logging:
      options:
        max-size: "1m"
        max-file: "2"
    working_dir: /app
    networks:
      - frontend
    depends_on:
      - nginx
      - api

  ui:
    container_name: ${BASE_NAME}_${DOCKER_ENV}_ui
    environment:
      DOCKER_ENV: ${DOCKER_ENV}
      SERVICE_MODE: ${SERVICE_MODE}
    logging:
      options:
        max-size: "1m"
        max-file: "2"
    working_dir: /app
    networks:
      - frontend
    depends_on:
      - nginx
      - api
      - auth

  worker:
    container_name: ${BASE_NAME}_${DOCKER_ENV}_worker
    environment:
      DOCKER_ENV: ${DOCKER_ENV}
      SERVICE_MODE: ${SERVICE_MODE}
    logging:
      options:
        max-size: "1m"
        max-file: "2"
    working_dir: /app
    networks:
      - backend
    depends_on:
      - redis
      - api

  db:
    container_name: ${BASE_NAME}_${DOCKER_ENV}_db
    image: postgres:13.2
    environment:
      PGDATA: /data/db
      POSTGRES_PASSWORD_FILE: /var/run/secrets/POSTGRES_PASSWORD
      POSTGRES_USER_FILE: /var/run/secrets/POSTGRES_USER
    logging:
      options:
        max-size: "1m"
        max-file: "2"
    networks:
      - backend
    volumes:
    - postgres_data:/data

  redis:
    container_name: ${BASE_NAME}_${DOCKER_ENV}_redis
    image: redis:6.2.3
    restart: unless-stopped
    logging:
      options:
        max-size: "1m"
        max-file: "2"
    volumes:
    - redis_data:/data
    networks:
      - backend

  adminer:
    container_name: ${BASE_NAME}_${DOCKER_ENV}_adminer
    image: adminer
    restart: unless-stopped
    profiles: ["development"]
    logging:
      options:
        max-size: "1m"
        max-file: "2"
    networks:
      - frontend
      - backend
    depends_on:
      - db
      - nginx


secrets:
  POSTGRES_PASSWORD:
    file: ${SECRETS_DIR}/POSTGRES_PASSWORD
  POSTGRES_USER:
    file: ${SECRETS_DIR}/POSTGRES_USER
  AUTH_MASTER_KEY:
    file: ${SECRETS_DIR}/AUTH_MASTER_KEY
  API_MASTER_KEY:
    file: ${SECRETS_DIR}/API_MASTER_KEY
  UI_MASTER_KEY:
    file: ${SECRETS_DIR}/UI_MASTER_KEY
  WORKER_MASTER_KEY:
    file: ${SECRETS_DIR}/WORKER_MASTER_KEY
  GOOGLE_CLIENT_ID:
    file: ${SECRETS_DIR}/GOOGLE_CLIENT_ID
  GOOGLE_CLIENT_SECRET:
    file: ${SECRETS_DIR}/GOOGLE_CLIENT_SECRET
  JWT_KEY:
    file: ${SECRETS_DIR}/jwt_key
  JWT_KEY_PUB:
    file: ${SECRETS_DIR}/jwt_key.pub

networks:
  frontend:
  backend:

volumes:
  postgres_data:
  redis_data:
